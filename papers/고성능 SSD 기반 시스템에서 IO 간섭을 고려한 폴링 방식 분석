	• 인터럽트, 폴링 방식에 대한 내용 
	-[멀티 큐 I/O 스케줄러에 대한 폴링 동작 분석]에 
	
	• 폴링 방식으로 I/O요청 완료 확인하는 기법 
	-> CPU 비효율적 사용 +  I/O 성능 향상 
	- 높은 I/O 처리량, 낮은 응답 시간 보장 (고성능 저장장치 효과적 활용)
	저장장치가 I/O요청을 빠르게 처리할수록 짧은 지연 시간 내에 CPU에 완료 신호 전달 가능 
	즉, 저장장치의 성능이 높을수록 I/O처리 완료 신호 CPU에 빠르게 전달할 수 있다. 
	- I/O요청 완료 유무 지속적 확인을 위해 CPU 사용률이 높아짐 
	(연산 작업 위주의 태스크와 I/O 쓰레드가 같은 CPU 사용시, I/O 요청 크기가 클 경우 -> 폴링방식의 이점 감소)
	
	• 실험: 다수의 I/O 스레드 - 폴링 방식 적용 
	1~15개까지의 인터럽트/폴링 방식 기반의 I/O 스레드 점진적 추가하면서 1의 주 스레드 I/O 응답 시간 측정 
	-> 모든 스레드 인터럽트 방식에서는 최악의 I/O 응답 시간 /
	9개 스레드가 추가될때까지는 비슷한 성능 보임
	10개 스레드부터는 폴링 > 폴링 + 인터럽트 스레드 함께 사용하는 경우
	주스레드의 응답 시간 감소 
	(폴링 방식만 사용되는 우 - 단일 스레드 환경에서는 좋지만 다중 스레드 환경에서는 성능 감소) 
	인터럽트 기반 스레드의 요청 크기가 커질수록 폴링 기반 주 스레드의 응답 시간이 지연되는데, 주 스레드가 인터럽트 방식일 떄보다 폴링 방식일 때 영향을 더 적게 바든다. 
